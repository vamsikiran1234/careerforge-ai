openapi: 3.0.3
info:
  title: CareerForge AI API
  description: |
    **CareerForge AI** is a comprehensive career guidance platform that leverages artificial intelligence to provide personalized career advice, skill assessments, and mentor matching.
    
    ## Features
    - ü§ñ **AI-Powered Career Chat** - Get personalized career guidance using advanced AI
    - üìù **Adaptive Quiz System** - Dynamic career assessment with stage-based progression  
    - üë®‚Äçüè´ **Mentor Matching** - Find the perfect mentor based on your goals and preferences
    - üîê **Secure & Scalable** - Enterprise-grade security with comprehensive rate limiting
    
    ## Base URL
    ```
    https://api.careerforge.ai/api/v1
    ```
    
    ## Rate Limiting
    This API implements multi-tier rate limiting to ensure fair usage:
    - **General API**: 100 requests per 15 minutes
    - **AI Services**: 20 requests per 5 minutes
    - **Chat Messages**: 10 messages per minute per user
    - **Quiz Actions**: 15 actions per 2 minutes per user
    - **Mentor Search**: 30 searches per 5 minutes
    - **Authentication**: 5 attempts per 15 minutes
    
    ## Error Handling
    All endpoints return standardized error responses with helpful error codes and messages.
    
    ## Security
    - Input sanitization (XSS/SQL injection protection)
    - Request size validation
    - Concurrent operation prevention
    - Suspicious request detection
  version: 1.0.0
  contact:
    name: CareerForge AI Support
    email: support@localhost
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.careerforge.ai/api/v1
    description: Production server
  - url: https://staging-api.careerforge.ai/api/v1
    description: Staging server
  - url: http://localhost:5000/api/v1
    description: Development server

tags:
  - name: Chat
    description: AI-powered career chat endpoints
  - name: Quiz
    description: Adaptive career assessment system
  - name: Mentor
    description: Mentor discovery and matching
  - name: Health
    description: System health and monitoring

paths:
  # Health Check
  /health:
    get:
      tags:
        - Health
      summary: API health check
      description: Check the health and status of the CareerForge AI API
      operationId: healthCheck
      responses:
        '200':
          description: API is healthy and operational
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
              example:
                status: "healthy"
                timestamp: "2025-07-21T05:30:00Z"
                version: "1.0.0"

  # Chat Endpoints
  /api/v1/chat:
    post:
      tags:
        - Chat
      summary: Send message to AI career advisor
      description: Send a career-related question or message to the AI career advisor
      operationId: sendChatMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
            example:
              userId: "user_12345"
              message: "I want to become a software engineer. What skills should I focus on?"
      responses:
        '200':
          description: Message processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                status: success
                message: Chat message processed successfully
                data:
                  sessionId: "session_abc123"
                  reply: "Software engineering is an excellent career choice! To get started, I recommend focusing on programming fundamentals..."
                  messageCount: 1
                timestamp: "2025-07-21T05:30:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    # Common Response Schema
    ApiResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum: [success, error]
          description: Response status indicator
        message:
          type: string
          description: Human-readable response message
        data:
          type: object
          description: Response payload data
        timestamp:
          type: string
          format: date-time
          description: Response timestamp
      example:
        status: success
        message: Operation completed successfully
        data: {}
        timestamp: "2025-07-21T05:30:00Z"

    # Error Response Schema
    ErrorResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum: [error]
          description: Always 'error' for error responses
        message:
          type: string
          description: User-friendly error message
        data:
          type: object
          properties:
            errorCode:
              type: string
              description: Specific error code for programmatic handling
            details:
              type: object
              description: Additional error details
            retryAfter:
              type: integer
              description: Seconds to wait before retry (for rate limiting)
            suggestions:
              type: array
              items:
                type: string
              description: Suggested actions to resolve the error
      example:
        status: error
        message: Validation failed
        data:
          errorCode: VALIDATION_ERROR
          errors:
            - field: userId
              message: User ID is required
              value: ""

    # Chat Request Schema
    ChatRequest:
      type: object
      required:
        - userId
        - message
      properties:
        userId:
          type: string
          pattern: '^[a-zA-Z0-9_-]+$'
          minLength: 1
          maxLength: 100
          description: Unique user identifier
          example: "user_12345"
        message:
          type: string
          minLength: 1
          maxLength: 1000
          description: User's career-related question or message
          example: "I want to become a software engineer. What skills should I focus on?"
        sessionId:
          type: string
          pattern: '^[a-zA-Z0-9_-]+$'
          description: Optional session ID to continue existing conversation
          example: "session_abc123"

    # Health Check Schema
    HealthCheck:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
          description: Overall system health status
          example: "healthy"
        timestamp:
          type: string
          format: date-time
          description: Health check timestamp
          example: "2025-07-21T05:30:00Z"
        version:
          type: string
          description: API version
          example: "1.0.0"

  responses:
    BadRequest:
      description: Invalid request parameters or malformed request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    
    RateLimited:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
