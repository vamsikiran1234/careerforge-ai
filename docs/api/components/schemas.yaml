# Data Models and Schemas

## Common Response Schema
ApiResponse:
  type: object
  required:
    - status
    - message
  properties:
    status:
      type: string
      enum: [success, error]
      description: Response status indicator
    message:
      type: string
      description: Human-readable response message
    data:
      type: object
      description: Response payload data
    timestamp:
      type: string
      format: date-time
      description: Response timestamp
  example:
    status: success
    message: Operation completed successfully
    data: {}
    timestamp: "2025-07-21T05:30:00Z"

## Error Response Schema
ErrorResponse:
  type: object
  required:
    - status
    - message
  properties:
    status:
      type: string
      enum: [error]
      description: Always 'error' for error responses
    message:
      type: string
      description: User-friendly error message
    data:
      type: object
      properties:
        errorCode:
          type: string
          description: Specific error code for programmatic handling
        details:
          type: object
          description: Additional error details
        retryAfter:
          type: integer
          description: Seconds to wait before retry (for rate limiting)
        suggestions:
          type: array
          items:
            type: string
          description: Suggested actions to resolve the error
        errors:
          type: array
          description: Validation errors (for validation failures)
          items:
            type: object
            properties:
              field:
                type: string
                description: Field that failed validation
              message:
                type: string
                description: Validation error message
              value:
                type: string
                description: Invalid value provided
  example:
    status: error
    message: Validation failed
    data:
      errorCode: VALIDATION_ERROR
      errors:
        - field: userId
          message: User ID is required
          value: ""

## Chat Schemas

ChatRequest:
  type: object
  required:
    - userId
    - message
  properties:
    userId:
      type: string
      pattern: '^[a-zA-Z0-9_-]+$'
      minLength: 1
      maxLength: 100
      description: Unique user identifier
      example: "user_12345"
    message:
      type: string
      minLength: 1
      maxLength: 1000
      description: User's career-related question or message
      example: "I want to become a software engineer. What skills should I focus on?"
    sessionId:
      type: string
      pattern: '^[a-zA-Z0-9_-]+$'
      description: Optional session ID to continue existing conversation
      example: "session_abc123"

ChatResponse:
  allOf:
    - $ref: '#/ApiResponse'
    - type: object
      properties:
        data:
          type: object
          properties:
            sessionId:
              type: string
              description: Unique session identifier
              example: "session_abc123"
            reply:
              type: string
              description: AI-generated career guidance response
              example: "Software engineering is an excellent career choice! To get started, I recommend focusing on these key areas..."
            messageCount:
              type: integer
              description: Total messages in this session
              example: 3
            suggestions:
              type: array
              items:
                type: string
              description: Follow-up question suggestions
              example: ["What programming languages should I learn first?", "How long does it take to become job-ready?"]

ChatSession:
  type: object
  properties:
    id:
      type: string
      description: Unique session identifier
      example: "session_abc123"
    userId:
      type: string
      description: User who owns this session
      example: "user_12345"
    title:
      type: string
      description: Session title (auto-generated)
      example: "Career Chat - 7/21/2025"
    messages:
      type: array
      items:
        $ref: '#/ChatMessage'
      description: All messages in this session
    createdAt:
      type: string
      format: date-time
      description: Session creation timestamp
      example: "2025-07-21T05:30:00Z"
    updatedAt:
      type: string
      format: date-time
      description: Last update timestamp
      example: "2025-07-21T05:35:00Z"
    isActive:
      type: boolean
      description: Whether session is currently active
      example: true

ChatMessage:
  type: object
  properties:
    role:
      type: string
      enum: [user, assistant]
      description: Message sender role
      example: "user"
    content:
      type: string
      description: Message content
      example: "What skills do I need for software engineering?"
    timestamp:
      type: string
      format: date-time
      description: Message timestamp
      example: "2025-07-21T05:30:00Z"

## Quiz Schemas

QuizStartRequest:
  type: object
  required:
    - userId
  properties:
    userId:
      type: string
      pattern: '^[a-zA-Z0-9_-]+$'
      minLength: 1
      maxLength: 100
      description: Unique user identifier
      example: "user_12345"
    domain:
      type: string
      enum: [TECHNOLOGY, HEALTHCARE, BUSINESS, CREATIVE, EDUCATION, OTHER]
      description: Optional domain focus for the quiz
      example: "TECHNOLOGY"

QuizAnswerRequest:
  type: object
  required:
    - answer
  properties:
    answer:
      type: string
      minLength: 1
      maxLength: 500
      description: User's answer to the current question
      example: "I enjoy solving complex problems and building software applications"

QuizSession:
  type: object
  properties:
    id:
      type: string
      description: Unique quiz session identifier
      example: "quiz_abc123"
    userId:
      type: string
      description: User taking the quiz
      example: "user_12345"
    stage:
      type: string
      enum: [INTERESTS, SKILLS, VALUES, GOALS, PREFERENCES]
      description: Current quiz stage
      example: "INTERESTS"
    currentQuestion:
      type: integer
      description: Current question number
      example: 3
    answers:
      type: array
      items:
        type: object
        properties:
          question:
            type: string
          answer:
            type: string
          timestamp:
            type: string
            format: date-time
      description: All answers provided so far
    results:
      type: object
      description: Quiz results and recommendations
      properties:
        careerSuggestions:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                example: "Software Engineer"
              match:
                type: number
                format: float
                example: 0.92
              reasons:
                type: array
                items:
                  type: string
        skillGaps:
          type: array
          items:
            type: string
        nextSteps:
          type: array
          items:
            type: string
    isComplete:
      type: boolean
      description: Whether quiz is completed
      example: false
    createdAt:
      type: string
      format: date-time
      example: "2025-07-21T05:30:00Z"

QuizQuestion:
  type: object
  properties:
    id:
      type: string
      description: Question identifier
      example: "q_interests_1"
    text:
      type: string
      description: Question text
      example: "What type of work environment energizes you most?"
    type:
      type: string
      enum: [multiple_choice, open_ended, rating_scale]
      description: Question type
      example: "multiple_choice"
    options:
      type: array
      items:
        type: string
      description: Available options (for multiple choice questions)
      example: ["Fast-paced startup", "Large corporate environment", "Remote/flexible work", "Team-based collaborative space"]
    stage:
      type: string
      enum: [INTERESTS, SKILLS, VALUES, GOALS, PREFERENCES]
      description: Quiz stage this question belongs to
      example: "INTERESTS"

## Mentor Schemas

MentorProfile:
  type: object
  properties:
    id:
      type: string
      description: Unique mentor identifier
      example: "mentor_12345"
    name:
      type: string
      description: Mentor's full name
      example: "Sarah Johnson"
    title:
      type: string
      description: Current job title
      example: "Senior Software Engineer"
    company:
      type: string
      description: Current company
      example: "Tech Corp Inc."
    domain:
      type: string
      enum: [TECHNOLOGY, HEALTHCARE, BUSINESS, CREATIVE, EDUCATION, OTHER]
      description: Primary expertise domain
      example: "TECHNOLOGY"
    skills:
      type: array
      items:
        type: string
      description: Areas of expertise
      example: ["JavaScript", "React", "Node.js", "System Design", "Leadership"]
    experience:
      type: string
      enum: [junior, mid, senior, lead, executive]
      description: Experience level
      example: "senior"
    bio:
      type: string
      description: Professional bio
      example: "Senior software engineer with 8+ years of experience in full-stack development..."
    location:
      type: string
      description: Geographic location
      example: "San Francisco, CA"
    availability:
      type: string
      enum: [available, limited, unavailable]
      description: Current availability status
      example: "available"
    rating:
      type: number
      format: float
      minimum: 0
      maximum: 5
      description: Average mentor rating
      example: 4.8
    totalSessions:
      type: integer
      description: Total mentoring sessions completed
      example: 156
    responseTime:
      type: string
      description: Average response time
      example: "< 2 hours"
    specialties:
      type: array
      items:
        type: string
      description: Mentoring specialties
      example: ["Career Transition", "Technical Skills", "Interview Preparation"]

MentorMatchRequest:
  type: object
  required:
    - userId
    - careerGoals
  properties:
    userId:
      type: string
      pattern: '^[a-zA-Z0-9_-]+$'
      description: User requesting mentor match
      example: "user_12345"
    careerGoals:
      type: string
      minLength: 10
      maxLength: 500
      description: User's career goals and objectives
      example: "I want to transition from web development to machine learning engineering"
    domain:
      type: string
      enum: [TECHNOLOGY, HEALTHCARE, BUSINESS, CREATIVE, EDUCATION, OTHER]
      description: Preferred domain
      example: "TECHNOLOGY"
    skills:
      type: array
      items:
        type: string
      maxItems: 10
      description: Current skills or skills to develop
      example: ["Python", "JavaScript", "Machine Learning"]
    experienceLevel:
      type: string
      enum: [beginner, intermediate, advanced]
      description: Current experience level
      example: "intermediate"
    budget:
      type: number
      minimum: 0
      maximum: 1000
      description: Budget for mentoring (monthly)
      example: 200
    location:
      type: string
      description: Preferred location (for in-person or timezone matching)
      example: "PST timezone"

MentorMatchResponse:
  allOf:
    - $ref: '#/ApiResponse'
    - type: object
      properties:
        data:
          type: object
          properties:
            matches:
              type: array
              items:
                type: object
                properties:
                  mentor:
                    $ref: '#/MentorProfile'
                  matchScore:
                    type: number
                    format: float
                    minimum: 0
                    maximum: 1
                    description: Compatibility score (0-1)
                    example: 0.89
                  reasons:
                    type: array
                    items:
                      type: string
                    description: Why this mentor is a good match
                    example: ["Strong ML background", "Similar career transition", "Excellent ratings"]
            totalMatches:
              type: integer
              description: Total number of matching mentors
              example: 5
            searchCriteria:
              type: object
              description: Search criteria used for matching
              properties:
                domain:
                  type: string
                skills:
                  type: array
                  items:
                    type: string
                experienceLevel:
                  type: string

## User Schemas

User:
  type: object
  properties:
    id:
      type: string
      description: Unique user identifier
      example: "user_12345"
    name:
      type: string
      description: User's full name
      example: "John Doe"
    email:
      type: string
      format: email
      description: User's email address
      example: "john.doe@example.com"
    role:
      type: string
      enum: [STUDENT, PROFESSIONAL, MENTOR, ADMIN]
      description: User role in the system
      example: "STUDENT"
    profile:
      type: object
      description: User profile information
      properties:
        currentRole:
          type: string
          example: "Junior Developer"
        industry:
          type: string
          example: "Technology"
        skills:
          type: array
          items:
            type: string
          example: ["JavaScript", "React"]
        goals:
          type: array
          items:
            type: string
          example: ["Learn machine learning", "Get promoted to senior role"]
    createdAt:
      type: string
      format: date-time
      description: Account creation timestamp
      example: "2025-07-21T05:30:00Z"
    updatedAt:
      type: string
      format: date-time
      description: Last profile update timestamp
      example: "2025-07-21T05:35:00Z"

## Health Check Schema

HealthCheck:
  type: object
  properties:
    status:
      type: string
      enum: [healthy, degraded, unhealthy]
      description: Overall system health status
      example: "healthy"
    timestamp:
      type: string
      format: date-time
      description: Health check timestamp
      example: "2025-07-21T05:30:00Z"
    version:
      type: string
      description: API version
      example: "1.0.0"
    services:
      type: object
      description: Status of individual services
      properties:
        database:
          type: object
          properties:
            status:
              type: string
              enum: [up, down]
              example: "up"
            responseTime:
              type: number
              description: Response time in milliseconds
              example: 45
        ai_service:
          type: object
          properties:
            status:
              type: string
              enum: [up, down]
              example: "up"
            model:
              type: string
              example: "gpt-4"
        cache:
          type: object
          properties:
            status:
              type: string
              enum: [up, down]
              example: "up"
    metrics:
      type: object
      description: System metrics
      properties:
        uptime:
          type: number
          description: Uptime in seconds
          example: 86400
        activeConnections:
          type: integer
          description: Number of active connections
          example: 42
        memoryUsage:
          type: object
          properties:
            used:
              type: number
              description: Used memory in MB
              example: 256
            total:
              type: number
              description: Total memory in MB
              example: 1024
